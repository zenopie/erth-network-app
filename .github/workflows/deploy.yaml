name: Deploy Frontend to Remote Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy Frontend to Remote Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_SERVER_HOST }}
          username: ${{ secrets.REMOTE_SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e # Exit immediately if a command fails.

            # --- Configuration ---
            REPO_DIR=/home/secret/erth-mainnet-app
            FRONTEND_DEPLOY_DIR=/var/www/erth

            # --- Repository Setup ---
            echo ">>> 1. Setting up repository in $REPO_DIR"
            mkdir -p $REPO_DIR
            cd $REPO_DIR

            # If the repo already exists, pull the latest changes. Otherwise, clone it.
            if [ -d ".git" ]; then
              git fetch origin main
              git reset --hard origin/main
              git clean -fd
            else
              git clone https://github.com/zenopie/erth-mainnet-app.git .
            fi

            # --- Frontend Build ---
            echo ">>> 2. Building Frontend"
            # Check for package.json to ensure we are in a node project
            if [ -f "package.json" ]; then
              # Set up NVM
              export NVM_DIR="$HOME/.nvm"
              if [ ! -s "$NVM_DIR/nvm.sh" ]; then
                echo "NVM not found, installing..."
                curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
              fi
              . "$NVM_DIR/nvm.sh"
              
              # Install and use the correct Node.js version
              nvm install 18
              nvm use 18
              
              # Install dependencies and build the project
              npm install
              npm run build
              
              # Deploy the built files to the web server directory
              echo "Deploying build files to $FRONTEND_DEPLOY_DIR"
              mkdir -p $FRONTEND_DEPLOY_DIR
              # The 'cp' command will overwrite existing files with the new build
              cp -r build/* $FRONTEND_DEPLOY_DIR/
            else
              echo "FATAL: package.json not found at root. Cannot build frontend."
              exit 1
            fi

            echo ">>> Frontend deployment successful! <<<"